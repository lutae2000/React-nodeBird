{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport reducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      if (typeof action === 'function') {\n        return action(dispatch, getState);\n      }\n\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore(context) {\n  var middlewares = [thunkMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/uitae/react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","compose","createStore","applyMiddleware","reducer","composeWithDevTools","thunkMiddleware","loggerMiddleware","dispatch","getState","next","action","configureStore","context","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAAQC,mBAAR,QAAmC,0BAAnC;AACA,OAAOC,eAAP,MAA4B,aAA5B;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SAA4B,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACvE,UAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAC9B,eAAOA,MAAM,CAACH,QAAD,EAAWC,QAAX,CAAb;AACH;;AACD,aAAOC,IAAI,CAACC,MAAD,CAAX;AACH,KALoD;AAAA,GAA5B;AAAA,CAAzB;;AAOA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAY;AAC/B,MAAMC,WAAW,GAAG,CAACR,eAAD,CAApB;AACA,MAAMS,QAAQ,GAAG,QACfd,OAAO,CAACE,eAAe,MAAf,SAAmBW,WAAnB,CAAD,CADQ,GAEfT,mBAAmB,CAACF,eAAe,MAAf,SAAmBW,WAAnB,CAAD,CAFrB;AAGA,MAAME,KAAK,GAAGd,WAAW,CAACE,OAAD,EAAUW,QAAV,CAAzB;AAEA,SAAOC,KAAP;AACH,CARD;;AAUA,IAAMC,OAAO,GAAGjB,aAAa,CAACY,cAAD,EAAiB;AAC1CM,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport reducer from '../reducers';\nimport {composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\n\n\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n    if (typeof action === 'function') {\n        return action(dispatch, getState);\n    }\n    return next(action);\n}\n\nconst configureStore = (context) =>{\n    const middlewares = [thunkMiddleware];\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(applyMiddleware(...middlewares));\n    const store = createStore(reducer, enhancer);\n\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}