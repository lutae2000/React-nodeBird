{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyUser = {\n  id: 1,\n  nickname: '제로초',\n  Posts: [],\n  Followings: [],\n  Followers: []\n};\nexport const initialState = {\n  isLoggedIn: false,\n  isLoggingIn: false,\n  isLoggingOut: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const loginAction = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n};\nexport const logoutAction = {\n  type: 'LOG_OUT'\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN_SUCCEED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        me: action.data\n      });\n\n    case 'LOG_IN_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        me: action.data\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        me: null\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/uitae/react-nodebird/prepare/front/reducers/user.js"],"names":["dummyUser","id","nickname","Posts","Followings","Followers","initialState","isLoggedIn","isLoggingIn","isLoggingOut","me","signUpData","loginData","loginAction","data","type","logoutAction","reducer","state","action"],"mappings":";;;;;;AACA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE,CADY;AAEhBC,EAAAA,QAAQ,EAAE,KAFM;AAGhBC,EAAAA,KAAK,EAAE,EAHS;AAIhBC,EAAAA,UAAU,EAAE,EAJI;AAKhBC,EAAAA,SAAS,EAAE;AALK,CAAlB;AAQA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,WAAW,EAAE,KAFa;AAG1BC,EAAAA,YAAY,EAAE,KAHY;AAI1BC,EAAAA,EAAE,EAAE,IAJsB;AAK1BC,EAAAA,UAAU,EAAE,EALc;AAM1BC,EAAAA,SAAS,EAAE;AANe,CAArB;AASP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALI;AAOP,OAAO,MAAME,YAAY,GAAG;AACxBD,EAAAA,IAAI,EAAE;AADkB,CAArB;;AAIP,MAAME,OAAO,GAAI,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAC/C,UAAOA,MAAM,CAACJ,IAAd;AACI,SAAK,gBAAL;AACI,6CACWG,KADX;AAEQX,QAAAA,UAAU,EAAE,IAFpB;AAGQG,QAAAA,EAAE,EAAES,MAAM,CAACL;AAHnB;;AAKJ,SAAK,gBAAL;AACM,6CACWI,KADX;AAEQX,QAAAA,UAAU,EAAE,IAFpB;AAGQG,QAAAA,EAAE,EAAES,MAAM,CAACL;AAHnB;;AAKN,SAAK,SAAL;AACI,6CACWI,KADX;AAEQX,QAAAA,UAAU,EAAE,KAFpB;AAGQG,QAAAA,EAAE,EAAE;AAHZ;;AAKJ;AACI,+BACKQ,KADL;AApBR;AAwBH,CAzBD;;AA6BA,eAAeD,OAAf","sourcesContent":["  \nconst dummyUser = {\n  id: 1,\n  nickname: '제로초',\n  Posts: [],\n  Followings: [],\n  Followers: [],\n};\n\nexport const initialState = {\n  isLoggedIn: false,\n  isLoggingIn: false,\n  isLoggingOut: false,\n  me: null,\n  signUpData: {},\n  loginData: {},\n};\n\nexport const loginAction = (data) => {\n    return {\n      type: 'LOG_IN',\n      data,\n    }\n  };\n\nexport const logoutAction = {\n    type: 'LOG_OUT',\n};\n\nconst reducer  = (state = initialState, action) => {\n    switch(action.type){\n        case 'LOG_IN_SUCCEED':\n            return{\n                    ...state,\n                    isLoggedIn: true,\n                    me: action.data,\n            };\n        case 'LOG_IN_REQUEST':\n              return{\n                      ...state,\n                      isLoggedIn: true,\n                      me: action.data,\n              };\n        case 'LOG_OUT':\n            return{\n                    ...state,\n                    isLoggedIn: false,\n                    me: null,\n            }\n        default:\n            return {\n              ...state,\n            }\n    }\n};\n\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}