{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport reducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = context => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/uitae/react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","compose","createStore","applyMiddleware","reducer","composeWithDevTools","createSagaMiddleware","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","context","sagaMiddleware","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAAQC,mBAAR,QAAmC,0BAAnC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;;AAGA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA6BC,IAAD,IAAWC,MAAD,IAAY;AACvEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CAHD;;AAKA,MAAMG,cAAc,GAAIC,OAAD,IAAa;AAChC,QAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,QAAMW,WAAW,GAAG,CAACD,cAAD,EAAiBT,gBAAjB,CAApB;AACA,QAAMW,QAAQ,GAAG,QACfjB,OAAO,CAACE,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CADQ,GAEfZ,mBAAmB,CAACF,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CAFrB;AAGA,QAAME,KAAK,GAAGjB,WAAW,CAACE,OAAD,EAAUc,QAAV,CAAzB;AAEA,SAAOC,KAAP;AACH,CATD;;AAWA,MAAMC,OAAO,GAAGpB,aAAa,CAACc,cAAD,EAAiB;AAC1CO,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport reducer from '../reducers';\nimport {composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\n\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n    console.log(action);\n    return next(action);\n}\n\nconst configureStore = (context) => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware, loggerMiddleware];\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(applyMiddleware(...middlewares));\n    const store = createStore(reducer, enhancer);\n\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}