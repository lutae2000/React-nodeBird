{"ast":null,"code":"var _jsxFileName = \"/Users/uitae/react-nodebird/prepare/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, Popover, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PostImages from '../components/PostImages';\nimport { useSelector } from 'react-redux';\n\nconst PostCard = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpend,\n    1: setCommentFormOpend\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpend(prev => !prev);\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      image: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 42\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#ff0000\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 23\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), commentFormOpend && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"\\uB313\\uAE00\\uBD80\\uBD84\"));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAT: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/uitae/react-nodebird/prepare/front/components/PostCard.js"],"names":["React","useCallback","useState","PropTypes","Button","Card","Popover","Avatar","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","PostImages","useSelector","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpend","setCommentFormOpend","onToggleLike","prev","onToggleComment","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createAT","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React ,{useCallback, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, Popover, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PostImages from '../components/PostImages';\nimport {useSelector} from 'react-redux';\n\nconst PostCard = ( {post} ) =>{\n    const id = useSelector((state) => state.user.me?.id);\n    const [liked, setLiked] = useState(false);\n    const [commentFormOpend, setCommentFormOpend] = useState(false);\n    const onToggleLike = useCallback(\n        () => {\n            setLiked((prev) => !prev);\n        },\n        [],\n    );\n    const onToggleComment = useCallback(\n        () => {\n            setCommentFormOpend((prev) => !prev)\n        },\n        [],\n    )\n    return(\n        <div style={{marginBottom: 10}}>\n            <Card\n                cover={post.Images[0] && <PostImages image={post.Images} />}\n                actions={[\n                    <RetweetOutlined key=\"retweet\"/>,\n                    liked \n                    ? <HeartTwoTone twoToneColor=\"#ff0000\" key=\"heart\" onClick={onToggleLike} />\n                    : <HeartOutlined key=\"heart\" key=\"heart\"  onClick={onToggleLike} />,\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n                    <Popover key=\"more\" content={(\n                        <Button.Group>\n                            {id && post.User.id === id ? ( \n                                <>\n                                <Button>수정</Button>\n                                <Button type=\"danger\">삭제</Button>\n                                </>\n                            ) : <Button>신고</Button>}\n                        </Button.Group>\n                    )}>\n                        <EllipsisOutlined />\n                    </Popover>\n                ]}\n            >\n                <Card.Meta\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={post.content}\n                /> \n\n\n                {/* <Image /> */}\n                {/* <Content /> */}\n                <Button />\n            </Card>\n            {commentFormOpend && ( \n                    <div>\n                        댓글부분\n                    </div>\n                )}\n            {/* <CommentForm /> */}\n            {/* <Comments /> */}\n        </div>\n    )\n};\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.number,\n        User: PropTypes.object,\n        content: PropTypes.string,\n        createAT: PropTypes.object,\n        Comments: PropTypes.arrayOf(PropTypes.object),\n        Images: PropTypes.arrayOf(PropTypes.object),\n\n    }).isRequired,\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}