{"ast":null,"code":"import _toConsumableArray from \"/Users/uitae/react-nodebird/prepare/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/uitae/react-nodebird/prepare/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫번째 게시글 #헤시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '개정판 출간'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '얼렁 사고싶다'\n    }]\n  }],\n  ImagePaths: [],\n  postAdded: false\n};\nvar ADD_POST = 'ADD_POST';\nexport var addPost = {\n  type: ADD_POST\n};\nvar dummyPost = {\n  id: 2,\n  content: '더미데이터입니다.',\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        postAdded: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/uitae/react-nodebird/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","ImagePaths","postAdded","ADD_POST","addPost","type","dummyPost","reducer","state","action"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,CAAC;AACRC,IAAAA,EAAE,EAAC,CADK;AAERC,IAAAA,IAAI,EAAC;AACDD,MAAAA,EAAE,EAAC,CADF;AAEDE,MAAAA,QAAQ,EAAC;AAFR,KAFG;AAMRC,IAAAA,OAAO,EAAE,sBAND;AAORC,IAAAA,MAAM,EAAE,CAAC;AACLC,MAAAA,GAAG,EAAE;AADA,KAAD,EAEH;AACDA,MAAAA,GAAG,EAAE;AADJ,KAFG,EAIH;AACDA,MAAAA,GAAG,EAAE;AADJ,KAJG,CAPA;AAcRC,IAAAA,QAAQ,EAAE,CAAC;AACPL,MAAAA,IAAI,EAAC;AACDC,QAAAA,QAAQ,EAAE;AADT,OADE;AAIPC,MAAAA,OAAO,EAAE;AAJF,KAAD,EAKP;AACCF,MAAAA,IAAI,EAAC;AACDC,QAAAA,QAAQ,EAAE;AADT,OADN;AAICC,MAAAA,OAAO,EAAE;AAJV,KALO;AAdF,GAAD,CADa;AA2BxBI,EAAAA,UAAU,EAAC,EA3Ba;AA4BxBC,EAAAA,SAAS,EAAE;AA5Ba,CAArB;AA+BP,IAAMC,QAAQ,GAAG,UAAjB;AAEA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAEF;AADe,CAAhB;AAIP,IAAMG,SAAS,GAAG;AAChBZ,EAAAA,EAAE,EAAE,CADY;AAEhBG,EAAAA,OAAO,EAAE,WAFO;AAGhBF,EAAAA,IAAI,EAAE;AACJD,IAAAA,EAAE,EAAE,CADA;AAEJE,IAAAA,QAAQ,EAAE;AAFN,GAHU;AAOhBE,EAAAA,MAAM,EAAE,EAPQ;AAQhBE,EAAAA,QAAQ,EAAE;AARM,CAAlB;;AAWA,IAAMO,OAAO,GAAI,SAAXA,OAAW,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBhB,YAAwB;AAAA,MAAViB,MAAU;;AAC9C,UAAOA,MAAM,CAACJ,IAAd;AACI,SAAKF,QAAL;AACI,6CACOK,KADP;AAEIf,QAAAA,SAAS,GAAGa,SAAH,4BAAiBE,KAAK,CAACf,SAAvB,EAFb;AAGIS,QAAAA,SAAS,EAAE;AAHf;;AAKJ;AACI,aAAOM,KAAP;AARR;AAUH,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n    mainPosts: [{\n        id:1,\n        User:{\n            id:1,\n            nickname:'제로초'\n        },\n        content: '첫번째 게시글 #헤시태그 #익스프레스',\n        Images: [{\n            src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n          }, {\n            src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n          }, {\n            src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n          }],\n        Comments: [{\n            User:{\n                nickname: 'nero',\n            },\n            content: '개정판 출간',\n        }, {\n            User:{\n                nickname: 'hero',\n            },\n            content: '얼렁 사고싶다'\n        }],\n    }],\n    ImagePaths:[],\n    postAdded: false,\n}\n\nconst ADD_POST = 'ADD_POST';\n\nexport const addPost = {\n  type: ADD_POST,\n};\n\nconst dummyPost = {\n  id: 2,\n  content: '더미데이터입니다.',\n  User: {\n    id: 1,\n    nickname: '제로초',\n  },\n  Images: [],\n  Comments: [],\n};\n\nconst reducer  = (state = initialState, action) =>{\n    switch(action.type){\n        case ADD_POST:\n            return{\n                ...state,\n                mainPosts: [dummyPost, ...state.mainPosts],\n                postAdded: true,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}