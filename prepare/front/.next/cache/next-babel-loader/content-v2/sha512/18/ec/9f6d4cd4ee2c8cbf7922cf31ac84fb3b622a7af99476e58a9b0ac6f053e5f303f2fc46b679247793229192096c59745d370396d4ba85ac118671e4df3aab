{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport reducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = context => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;\n/*\n리액트 SAGA란?\n애플리케이션에서 일어나는 side effect(데이터를 불러오는 비동기 처리나 브라우저 캐쉬에 접근하는등)등을\n쉽게 관리하여 효과적인 실행, 손쉬운 테스트, 에러 핸들링을 쉽게 해줌\n\nhttps://uzihoon.com/post/181be130-63a7-11ea-a51b-d348fee141c4\nhttps://velog.io/@jeonghoheo/Redux-Saga%EC%9D%98-%EA%B8%B0%EB%B3%B8\nhttps://react.vlpt.us/redux-middleware/10-redux-saga.html\n*/","map":{"version":3,"sources":["/Users/uitae/react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","compose","createStore","applyMiddleware","reducer","composeWithDevTools","createSagaMiddleware","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","context","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","rootSaga","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAAQC,mBAAR,QAAmC,0BAAnC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;;AAGA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA6BC,IAAD,IAAWC,MAAD,IAAY;AACvEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CAHD;;AAKA,MAAMG,cAAc,GAAIC,OAAD,IAAa;AAChC,QAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,QAAMW,WAAW,GAAG,CAACD,cAAD,EAAiBT,gBAAjB,CAApB;AACA,QAAMW,QAAQ,GAAG,QACfjB,OAAO,CAACE,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CADQ,GAEfZ,mBAAmB,CAACF,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CAFrB;AAGA,QAAME,KAAK,GAAGjB,WAAW,CAACE,OAAD,EAAUc,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBC,QAAnB,CAAjB;AAEA,SAAOH,KAAP;AACH,CAVD;;AAYA,MAAMI,OAAO,GAAGvB,aAAa,CAACc,cAAD,EAAiB;AAC1CU,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport reducer from '../reducers';\nimport {composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\n\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n    console.log(action);\n    return next(action);\n}\n\nconst configureStore = (context) => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware, loggerMiddleware];\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(applyMiddleware(...middlewares));\n    const store = createStore(reducer, enhancer);\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;\n\n/*\n리액트 SAGA란?\n애플리케이션에서 일어나는 side effect(데이터를 불러오는 비동기 처리나 브라우저 캐쉬에 접근하는등)등을\n쉽게 관리하여 효과적인 실행, 손쉬운 테스트, 에러 핸들링을 쉽게 해줌\n\nhttps://uzihoon.com/post/181be130-63a7-11ea-a51b-d348fee141c4\nhttps://velog.io/@jeonghoheo/Redux-Saga%EC%9D%98-%EA%B8%B0%EB%B3%B8\nhttps://react.vlpt.us/redux-middleware/10-redux-saga.html\n*/"]},"metadata":{},"sourceType":"module"}