{"ast":null,"code":"var _jsxFileName = \"/Users/uitae/react-nodebird/prepare/front/components/PostCardContent.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar PostCardContent = function PostCardContent(_ref) {\n  var postData = _ref.postData;\n\n  //해시태그 하이퍼링크 추가\n  __jsx(React.Fragment, null, postData.split(/(#[^\\s#]+)/g).map(function (v) {\n    if (v.match(/(#[^\\s#]+)/g)) {\n      return __jsx(Link, {\n        href: '/hashtag/${v.slice(1)}',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 24\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 62\n        }\n      }, v));\n    }\n\n    return v;\n  }));\n};\n\n_c = PostCardContent;\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired\n};\nexport default PostCardContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCardContent\");","map":{"version":3,"sources":["/Users/uitae/react-nodebird/prepare/front/components/PostCardContent.js"],"names":["React","PropTypes","PostCardContent","postData","split","map","v","match","propTypes","string","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAE;AACxC,8BACKA,QAAQ,CAACC,KAAT,CAAe,aAAf,EAA8BC,GAA9B,CAAkC,UAACC,CAAD,EAAO;AACtC,QAAIA,CAAC,CAACC,KAAF,CAAQ,aAAR,CAAJ,EAA4B;AACxB,aAAO,MAAC,IAAD;AAAM,QAAA,IAAI,EAAE,wBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,CAAJ,CAAtC,CAAP;AACH;;AACG,WAAOA,CAAP;AACP,GALA,CADL;AAQH,CATD;;KAAMJ,e;AAWNA,eAAe,CAACM,SAAhB,GAA4B;AACxBL,EAAAA,QAAQ,EAAEF,SAAS,CAACQ,MAAV,CAAiBC;AADH,CAA5B;AAKA,eAAeR,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst PostCardContent = ({ postData }) => { //해시태그 하이퍼링크 추가\n    <>\n        {postData.split(/(#[^\\s#]+)/g).map((v) => {\n            if (v.match(/(#[^\\s#]+)/g)) {\n                return <Link href={'/hashtag/${v.slice(1)}'}><a>{v}</a></Link>\n            }\n                return v;\n        })}\n    </>\n}\n\nPostCardContent.propTypes = {\n    postData: PropTypes.string.isRequired\n};\n\n\nexport default PostCardContent;"]},"metadata":{},"sourceType":"module"}