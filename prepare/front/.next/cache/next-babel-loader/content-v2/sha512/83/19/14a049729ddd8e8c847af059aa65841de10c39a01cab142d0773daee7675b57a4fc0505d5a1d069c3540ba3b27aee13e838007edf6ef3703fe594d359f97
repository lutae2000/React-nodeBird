{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialStatus = {\n  name: 'zero cho',\n  age: 29,\n  password: babo\n};\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\n\nconst login = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n}; //action creater\n\n\nconst changeNickname = data => {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data: 'booicho'\n  };\n}; //(이전상태, 액션) => 다음상태\n\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true\n        })\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/uitae/react-nodebird/prepare/front/reducers/index.js"],"names":["initialStatus","name","age","password","babo","initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","login","data","type","changeNickname","rootReducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAE,UADY;AAElBC,EAAAA,GAAG,EAAE,EAFa;AAGlBC,EAAAA,QAAQ,EAAEC;AAHQ,CAAtB;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,KADV;AAEFD,IAAAA,IAAI,EAAE,IAFJ;AAGFE,IAAAA,UAAU,EAAE,EAHV;AAIFC,IAAAA,SAAS,EAAE;AAJT,GADW;AAOjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE;AADT;AAPW,CAArB;;AAYA,MAAMC,KAAK,GAAIC,IAAD,IAAS;AACnB,SAAM;AACFC,IAAAA,IAAI,EAAE,QADJ;AAEFD,IAAAA;AAFE,GAAN;AAIH,CALD,C,CAOA;;;AACA,MAAME,cAAc,GAAIF,IAAD,IAAU;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAE,iBADH;AAEHD,IAAAA,IAAI,EAAE;AAFH,GAAP;AAIH,CALD,C,CAOA;;;AACA,MAAMG,WAAW,GAAG,CAACC,KAAK,GAACZ,YAAP,EAAqBa,MAArB,KAAgC;AAChD,UAAOA,MAAM,CAACJ,IAAd;AACI,SAAK,QAAL;AACI,6CACOG,KADP;AAEIX,QAAAA,IAAI,kCACGW,KAAK,CAACX,IADT;AAEAC,UAAAA,UAAU,EAAE;AAFZ;AAFR;AAFR;AAUH,CAXD;;AAaA,eAAeS,WAAf","sourcesContent":["const initialStatus = {\n    name: 'zero cho',\n    age: 29,\n    password: babo,\n};\n\nconst initialState = {\n    user: {\n        isLoggedIn: false,\n        user: null,\n        signUpData: {},\n        loginData: {}, \n    },\n    post: {\n        mainPosts: [],\n    }\n};\n\nconst login = (data) =>{\n    return{\n        type: 'LOG_IN',\n        data,\n    }\n};\n\n//action creater\nconst changeNickname = (data) => {\n    return {\n        type: 'CHANGE_NICKNAME',\n        data: 'booicho',\n    }\n};\n\n//(이전상태, 액션) => 다음상태\nconst rootReducer = (state=initialState, action) => {\n    switch(action.type){\n        case 'LOG_IN':\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    isLoggedIn: true,\n                }\n            };\n    }\n};\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}