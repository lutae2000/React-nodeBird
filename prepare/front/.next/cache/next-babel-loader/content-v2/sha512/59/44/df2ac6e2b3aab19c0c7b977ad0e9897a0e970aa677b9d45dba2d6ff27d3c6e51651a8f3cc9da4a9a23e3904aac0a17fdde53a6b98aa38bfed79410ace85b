{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      me: 1,\n      nickname: '이의태'\n    },\n    content: '첫 번째 게시글',\n    hashtag: '#해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔군요~'\n    }, {\n      User: {\n        nickname: 'hehe'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nconst ADD_POST = 'ADD_POST';\nexport const addPost = {\n  type: ADD_POST\n};\nconst dummyPost = {\n  id: 2,\n  content: '더미데이터입니다.',\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: [dummyPost, ...state.mainPosts],\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {}\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/uitae/react-nodebird/prepare/front/reducers/post.js"],"names":["ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","initialState","mainPosts","id","User","me","nickname","content","hashtag","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","state","action"],"mappings":";;;;;;AAEA,OAAO,MAAMA,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CAAC;AACVC,IAAAA,EAAE,EAAE,CADM;AAEVC,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EAAE,CADA;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAFI;AAMVC,IAAAA,OAAO,EAAE,UANC;AAOVC,IAAAA,OAAO,EAAE,cAPC;AAQVC,IAAAA,MAAM,EAAE,CAAC;AACPC,MAAAA,GAAG,EAAE;AADE,KAAD,EAEL;AACDA,MAAAA,GAAG,EAAE;AADJ,KAFK,EAIL;AACDA,MAAAA,GAAG,EAAE;AADJ,KAJK,CARE;AAeVC,IAAAA,QAAQ,EAAE,CAAC;AACTP,MAAAA,IAAI,EAAE;AACJE,QAAAA,QAAQ,EAAE;AADN,OADG;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAD,EAKP;AACDH,MAAAA,IAAI,EAAE;AACJE,QAAAA,QAAQ,EAAE;AADN,OADL;AAIDC,MAAAA,OAAO,EAAE;AAJR,KALO;AAfA,GAAD,CADe;AA4B1BK,EAAAA,UAAU,EAAE,EA5Bc;AA6B1BC,EAAAA,SAAS,EAAE;AA7Be,CAArB;AAgCP,MAAMC,QAAQ,GAAG,UAAjB;AAEA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAEF;AADe,CAAhB;AAIP,MAAMG,SAAS,GAAG;AAChBd,EAAAA,EAAE,EAAE,CADY;AAEhBI,EAAAA,OAAO,EAAE,WAFO;AAGhBH,EAAAA,IAAI,EAAE;AACJD,IAAAA,EAAE,EAAE,CADA;AAEJG,IAAAA,QAAQ,EAAE;AAFN,GAHU;AAOhBG,EAAAA,MAAM,EAAE,EAPQ;AAQhBE,EAAAA,QAAQ,EAAE;AARM,CAAlB;AAWA,gBAAe,CAACO,KAAK,GAAGjB,YAAT,EAAuBkB,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKlB,gBAAL;AAAuB;AACrB,+CACKoB,KADL;AAEEhB,UAAAA,SAAS,EAAE,CAACe,SAAD,EAAY,GAAGC,KAAK,CAAChB,SAArB,CAFb;AAGEW,UAAAA,SAAS,EAAE;AAHb;AAKD;;AACD,SAAKd,gBAAL;AAAuB,OAEtB;;AACD;AAAS;AACP,iCACKmB,KADL;AAGD;AAfH;AAiBD,CAlBD","sourcesContent":["\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      me: 1,\n      nickname: '이의태',\n    },\n    content: '첫 번째 게시글',\n    hashtag: '#해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero',\n      },\n      content: '우와 개정판이 나왔군요~',\n    }, {\n      User: {\n        nickname: 'hehe',\n      },\n      content: '얼른 사고싶어요~',\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false,\n};\n\nconst ADD_POST = 'ADD_POST';\n\nexport const addPost = {\n  type: ADD_POST,\n};\n\nconst dummyPost = {\n  id: 2,\n  content: '더미데이터입니다.',\n  User: {\n    id: 1,\n    nickname: '제로초',\n  },\n  Images: [],\n  Comments: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST: {\n      return {\n        ...state,\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true,\n      };\n    }\n    case ADD_POST_SUCCESS: {\n      \n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}