{"ast":null,"code":"import axios from 'axios';\nimport { delay, put, takeLatest, all, fork } from '@redux-saga/core/effects';\n\nfunction* addPost(action) {\n  try {\n    //const result = yield call(loginAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCEED,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.result.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('api/post', data);\n} //takeEvery는 while 돌리는것처럼 매번 실행\n//takeLatest는 짧은시간내 여러번 이벤트 발생해도 맨 마지막것만 실행\n//takeLeading 짧은시간에 여러번의 이벤트시 첫번째것 실행\n\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST');\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/uitae/react-nodebird/prepare/front/sagas/post.js"],"names":["axios","delay","put","takeLatest","all","fork","addPost","action","type","ADD_POST_SUCCEED","data","result","err","ADD_POST_FAILURE","addPostAPI","post","watchAddPost","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,UAArB,EAAiCC,GAAjC,EAAsCC,IAAtC,QAAkD,0BAAlD;;AAGA,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACA,UAAML,GAAG,CAAC;AACNM,MAAAA,IAAI,EAAEC,gBADA;AAENC,MAAAA,IAAI,EAAEC,MAAM,CAACD;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOE,GAAP,EAAY;AACV,UAAMV,GAAG,CAAC;AACNM,MAAAA,IAAI,EAAEK,gBADA;AAENH,MAAAA,IAAI,EAAEE,GAAG,CAACD,MAAJ,CAAWD;AAFX,KAAD,CAAT;AAIH;AACJ;;AAED,SAASI,UAAT,CAAoBJ,IAApB,EAA0B;AACtB,SAAOV,KAAK,CAACe,IAAN,CAAW,UAAX,EAAuBL,IAAvB,CAAP;AACH,C,CAGD;AACA;AACA;;;AAIA,UAAUM,YAAV,GAAyB;AACrB,QAAMb,UAAU,CAAC,kBAAD,CAAhB;AACH;;AAGD,eAAe,UAAUc,QAAV,GAAqB;AAChC,QAAMb,GAAG,CAAC,CACNC,IAAI,CAACW,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import axios from 'axios';\n\nimport { delay, put, takeLatest, all, fork } from '@redux-saga/core/effects';\n\n\nfunction* addPost(action) {\n    try {\n        //const result = yield call(loginAPI, action.data);\n        yield put({\n            type: ADD_POST_SUCCEED,\n            data: result.data\n        });\n    } catch (err) {\n        yield put({\n            type: ADD_POST_FAILURE,\n            data: err.result.data,\n        })\n    }\n}\n\nfunction addPostAPI(data) {\n    return axios.post('api/post', data);\n}\n\n\n//takeEvery는 while 돌리는것처럼 매번 실행\n//takeLatest는 짧은시간내 여러번 이벤트 발생해도 맨 마지막것만 실행\n//takeLeading 짧은시간에 여러번의 이벤트시 첫번째것 실행\n\n\n\nfunction* watchAddPost() {\n    yield takeLatest('ADD_POST_REQUEST');\n}\n\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost),\n    ])\n}"]},"metadata":{},"sourceType":"module"}