{"ast":null,"code":"import axios from 'axios';\nimport { all, delay, fork, put, takeLatest, throttle } from 'redux-saga/effects';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post';\n\nfunction* addPost(action) {\n  try {\n    //const result = yield call(loginAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.result.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('api/post', data);\n} //takeEvery는 while 돌리는것처럼 매번 실행\n//takeLatest는 짧은시간내 여러번 이벤트 발생해도 맨 마지막것만 실행\n//takeLeading 짧은시간에 여러번의 이벤트시 첫번째것 실행\n\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST');\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/uitae/react-nodebird/prepare/front/sagas/post.js"],"names":["axios","all","delay","fork","put","takeLatest","throttle","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPost","action","type","data","result","err","addPostAPI","post","watchAddPost","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,EAA4CC,QAA5C,QAA4D,oBAA5D;AACA,SACIC,gBADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,QAIO,kBAJP;;AAMA,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACA,UAAMP,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAEH,gBADA;AAENI,MAAAA,IAAI,EAAEC,MAAM,CAACD;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAEL,gBADA;AAENM,MAAAA,IAAI,EAAEE,GAAG,CAACD,MAAJ,CAAWD;AAFX,KAAD,CAAT;AAIH;AACJ;;AAED,SAASG,UAAT,CAAoBH,IAApB,EAA0B;AACtB,SAAOb,KAAK,CAACiB,IAAN,CAAW,UAAX,EAAuBJ,IAAvB,CAAP;AACH,C,CAGD;AACA;AACA;;;AAIA,UAAUK,YAAV,GAAyB;AACrB,QAAMb,UAAU,CAAC,kBAAD,CAAhB;AACH;;AAGD,eAAe,UAAUc,QAAV,GAAqB;AAChC,QAAMlB,GAAG,CAAC,CACNE,IAAI,CAACe,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import axios from 'axios';\n\nimport { all, delay, fork, put, takeLatest, throttle } from 'redux-saga/effects';\nimport {\n    ADD_POST_FAILURE,\n    ADD_POST_REQUEST,\n    ADD_POST_SUCCESS,\n} from '../reducers/post';\n\nfunction* addPost(action) {\n    try {\n        //const result = yield call(loginAPI, action.data);\n        yield put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n        });\n    } catch (err) {\n        yield put({\n            type: ADD_POST_FAILURE,\n            data: err.result.data,\n        })\n    }\n}\n\nfunction addPostAPI(data) {\n    return axios.post('api/post', data);\n}\n\n\n//takeEvery는 while 돌리는것처럼 매번 실행\n//takeLatest는 짧은시간내 여러번 이벤트 발생해도 맨 마지막것만 실행\n//takeLeading 짧은시간에 여러번의 이벤트시 첫번째것 실행\n\n\n\nfunction* watchAddPost() {\n    yield takeLatest('ADD_POST_REQUEST');\n}\n\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost),\n    ])\n}"]},"metadata":{},"sourceType":"module"}